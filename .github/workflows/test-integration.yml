name: Integration Tests

on:
  push:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        provider: [gemini, openai, claude, llama]
        exclude:
          # Exclude providers that don't have secrets configured
          - provider: gemini
            # This will be skipped if GOOGLE_API_KEY is not set
          - provider: openai
            # This will be skipped if OPENAI_API_KEY is not set
          - provider: claude
            # This will be skipped if CLAUDE_API_KEY is not set
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpoppler-cpp-dev tesseract-ocr curl
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install -r requirements.txt
        pip install -e .
    
    - name: Start ChromaDB
      run: |
        docker run -d -p 8000:8000 --name chromadb chromadb/chroma:0.4.22
        sleep 10
    
    - name: Setup Llama (Ollama) if needed
      if: matrix.provider == 'llama'
      run: |
        curl -fsSL https://ollama.ai/install.sh | sh
        ollama serve &
        sleep 15
        # Pull smaller models for testing to avoid timeout
        ollama pull llama3.2:1b
        sleep 45
    
    - name: Verify Ollama is running
      if: matrix.provider == 'llama'
      run: |
        curl -s http://localhost:11434/api/tags | jq '.'
    
    - name: Run integration tests - Gemini
      if: matrix.provider == 'gemini'
      env:
        LLM_PROVIDER: gemini
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        CHROMA_DB_HOST: localhost
        CHROMA_DB_PORT: 8000
        CHROMA_DB_USE_REMOTE: true
        LOG_LEVEL: INFO
        LOG_FORMAT: text
      run: |
        pytest tests/integration/ -v --cov=testteller --cov-report=xml -m "integration and not slow" -k "gemini or (not (openai or claude or llama))"
    
    - name: Run integration tests - OpenAI
      if: matrix.provider == 'openai'
      env:
        LLM_PROVIDER: openai
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CHROMA_DB_HOST: localhost
        CHROMA_DB_PORT: 8000
        CHROMA_DB_USE_REMOTE: true
        LOG_LEVEL: INFO
        LOG_FORMAT: text
      run: |
        pytest tests/integration/ -v --cov=testteller --cov-report=xml -m "integration and not slow" -k "openai or (not (gemini or claude or llama))"
    
    - name: Run integration tests - Claude
      if: matrix.provider == 'claude'
      env:
        LLM_PROVIDER: claude
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CHROMA_DB_HOST: localhost
        CHROMA_DB_PORT: 8000
        CHROMA_DB_USE_REMOTE: true
        LOG_LEVEL: INFO
        LOG_FORMAT: text
      run: |
        pytest tests/integration/ -v --cov=testteller --cov-report=xml -m "integration and not slow" -k "claude or (not (gemini or openai or llama))"
    
    - name: Run integration tests - Llama
      if: matrix.provider == 'llama'
      env:
        LLM_PROVIDER: llama
        OLLAMA_BASE_URL: http://localhost:11434
        LLAMA_EMBEDDING_MODEL: llama3.2:1b
        LLAMA_GENERATION_MODEL: llama3.2:1b
        CHROMA_DB_HOST: localhost
        CHROMA_DB_PORT: 8000
        CHROMA_DB_USE_REMOTE: true
        LOG_LEVEL: INFO
        LOG_FORMAT: text
      run: |
        pytest tests/integration/ -v --cov=testteller --cov-report=xml --timeout=600 -m "integration and slow" -k "llama or (not (gemini or openai or claude))"
    
    - name: Run CLI tests
      env:
        LLM_PROVIDER: ${{ matrix.provider }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        OLLAMA_BASE_URL: http://localhost:11434
        CHROMA_DB_HOST: localhost
        CHROMA_DB_PORT: 8000
        CHROMA_DB_USE_REMOTE: true
        LOG_LEVEL: INFO
        LOG_FORMAT: text
      run: |
        pytest tests/cli/ -v -m "cli and not slow"
    
    - name: Stop services
      if: always()
      run: |
        # Stop Ollama
        pkill -f ollama || true
        # Stop ChromaDB
        docker stop chromadb || true
        docker rm chromadb || true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration-${{ matrix.provider }}
        name: integration-tests-${{ matrix.provider }}
        fail_ci_if_error: false 