services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: testteller_app
    restart: unless-stopped
    # The container will stay running. Use 'docker-compose exec app python -m testteller.main <command>' to run commands
    command: serve
    environment:
      # API Keys (Required)
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:?GOOGLE_API_KEY is required}
      # Optional: GitHub token for private repos. Leave empty or unset if not needed
      - GITHUB_TOKEN

      # ChromaDB Configuration
      - CHROMA_DB_HOST=chromadb
      - CHROMA_DB_PORT=8000
      - CHROMA_DB_USE_REMOTE=true
      - CHROMA_DB_PERSIST_DIRECTORY=/app/chroma_data
      - DEFAULT_COLLECTION_NAME=${DEFAULT_COLLECTION_NAME:-test_documents_non_prod}

      # Logging and Debug
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}

      # LLM Configuration
      - GEMINI_EMBEDDING_MODEL=${GEMINI_EMBEDDING_MODEL:-text-embedding-004}
      - GEMINI_GENERATION_MODEL=${GEMINI_GENERATION_MODEL:-gemini-2.0-flash}

      # Document Processing
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
      
      # Code Loading
      - CODE_EXTENSIONS=${CODE_EXTENSIONS:-".py,.js,.ts,.java,.go,.rs,.cpp,.hpp,.c,.h,.cs,.rb,.php"}
      - TEMP_CLONE_DIR_BASE=/app/temp_cloned_repos

      # Output Configuration
      - OUTPUT_FILE_PATH=${OUTPUT_FILE_PATH:-testteller_output.md}

    volumes:
      # Persistent storage for app data
      - chroma_data:/app/chroma_data
      - ./temp_cloned_repos:/app/temp_cloned_repos
      
      # Optional: Mount local code/docs for testing
      # - ./local_code:/app/local_code:ro
      # - ./local_docs:/app/local_docs:ro

    depends_on:
      chromadb:
        condition: service_healthy
    networks:
      - testteller_network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://chromadb:8000/api/v1/heartbeat || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  chromadb:
    image: chromadb/chroma:0.4.22
    container_name: testteller_chromadb
    restart: unless-stopped
    volumes:
      - ./chroma_data_prod:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_PERSIST_DIRECTORY=/chroma/chroma
    ports:
      - "127.0.0.1:8000:8000"  # Only expose to localhost
    networks:
      - testteller_network
    command: >
      bash -c "apt-get update && apt-get install -y curl &&
      uvicorn chromadb.app:app --reload --workers 1 --host 0.0.0.0 --port 8000 --log-level warning"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M

volumes:
  chroma_data:
    name: testteller_chroma_data

networks:
  testteller_network:
    driver: bridge
    name: testteller_network
